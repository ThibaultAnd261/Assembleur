


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; configure the corresponding pin to be an output
   33 00000000         ; all GPIO pins are inputs by default
   34 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   35 00000000         
   36 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   37 00000000         ; By default, all GPIO pins have 2-mA drive.
   38 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   39 00000000         
   40 00000000         ; Digital enable register
   41 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   42 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   43 00000000         
   44 00000000         ; Pul_up
   45 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   46 00000000         
   47 00000000         ; Broches select
   48 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   49 00000000         
   50 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   51 00000000         
   52 00000000         ; blinking frequency
   53 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   54 00000000         
   55 00000000                 ENTRY
   56 00000000                 EXPORT           __main
   57 00000000         
   58 00000000         



ARM Macro Assembler    Page 3 


   59 00000000         
   60 00000000         
   61 00000000         __main
   62 00000000         
   63 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   64 00000000         ; ;;         
   65 00000000 4E24            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   66 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   67 00000006         ; ;;                              (GPIO::FEDCBA)
   68 00000006 6030            str              r0, [r6]
   69 00000008         
   70 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   71 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   72 0000000A BF00            nop
   73 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   74 0000000E         
   75 0000000E         
   76 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   77 0000000E         
   78 0000000E 4E22            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   79 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   80 00000014 6030            str              r0, [r6]
   81 00000016         
   82 00000016 4E21            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   83 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   84 0000001C 6030            str              r0, [r6]
   85 0000001E         
   86 0000001E 4E20            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   87 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   88 00000024 6030            str              r0, [r6]
   89 00000026         
   90 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   91 0000002A         
   92 0000002A         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper droi
                       t
   93 0000002A         
   94 0000002A 4F1E            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU



ARM Macro Assembler    Page 4 


R 
                                                            ;; Pul_up 
   95 0000002C 481D            ldr              r0, = BROCHE0
   96 0000002E 6038            str              r0, [r7]
   97 00000030         
   98 00000030 4F1C            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   99 00000032 481C            ldr              r0, = BROCHE0
  100 00000034 6038            str              r0, [r7]
  101 00000036         
  102 00000036 4F1B            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> bumper
  103 00000038         
  104 00000038         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration bumper droit 
  105 00000038         
  106 00000038         ; allumer la led broche 4 (BROCHE4_5)
  107 00000038 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  108 0000003C         
  109 0000003C 4E1E            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  110 0000003E         
  111 0000003E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED ;^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^CLIGNOTTEMENT
  112 0000003E         
  113 0000003E 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  114 00000040         
  115 00000040         ReadState
  116 00000040         
  117 00000040 F8D7 A000       ldr              r10,[r7]
  118 00000044 F1BA 0F00       CMP              r10,#0x00
  119 00000048 D1FA            BNE              ReadState
  120 0000004A         
  121 0000004A         loopa
  122 0000004A 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  123 0000004C 491B            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  124 0000004E         
  125 0000004E 3901    waita   subs             r1, #1
  126 00000050 D1FD            bne              waita
  127 00000052         
  128 00000052 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)



ARM Macro Assembler    Page 5 


  129 00000054 4919            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  130 00000056         
  131 00000056 3901    waitb   subs             r1, #1
  132 00000058 D1FD            bne              waitb
  133 0000005A         
  134 0000005A E7F6            b                loopa
  135 0000005C         
  136 0000005C         
  137 0000005C         ;; BL Branchement vers un lien (sous programme)
  138 0000005C         
  139 0000005C         ; Configure les PWM + GPIO
  140 0000005C F7FF FFFE       BL               MOTEUR_INIT
  141 00000060         
  142 00000060         ; Activer les deux moteurs droit et gauche
  143 00000060 F7FF FFFE       BL               MOTEUR_DROIT_ON
  144 00000064 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  145 00000068         
  146 00000068         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  147 00000068         loop
  148 00000068         ; Evalbot avance droit devant
  149 00000068 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  150 0000006C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  151 00000070         
  152 00000070         ; Avancement pendant une période (deux WAIT)
  153 00000070 F000 F807       BL               WAITR       ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  154 00000074 F000 F805       BL               WAITR
  155 00000078         
  156 00000078         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  157 00000078 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE ; MOTEUR_D
                                                            ROIT_INVERSE
  158 0000007C F000 F801       BL               WAITR
  159 00000080         
  160 00000080 E7F2            b                loop
  161 00000082         
  162 00000082         ;; Boucle d'attente pour le recul
  163 00000082 490F    WAITR   ldr              r1, =0xAFFFFF
  164 00000084 3901    wait1   subs             r1, #1
  165 00000086 D1FD            bne              wait1
  166 00000088         
  167 00000088         ;; retour à la suite du lien de branchement
  168 00000088 4770            BX               LR
  169 0000008A         
  170 0000008A         ;; Boucle d'attente lors de la rotation
  171 0000008A 490D    WAITT   ldr              r1, =0xAFFFFF
  172 0000008C 3901    wait2   subs             r1, #1
  173 0000008E D1FD            bne              wait2
  174 00000090         
  175 00000090         ;; retour à la suite du lien de branchement
  176 00000090 4770            BX               LR
  177 00000092         
  178 00000092 BF00            NOP



ARM Macro Assembler    Page 6 


  179 00000094                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              400250C0 
              002FFFFF 
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s
