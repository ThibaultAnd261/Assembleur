


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; The GPIODATA register is the data register
   33 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   34 00000000         
   35 00000000         ; configure the corresponding pin to be an output
   36 00000000         ; all GPIO pins are inputs by default
   37 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   38 00000000         
   39 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   40 00000000         ; By default, all GPIO pins have 2-mA drive.
   41 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   42 00000000         
   43 00000000         ; Digital enable register
   44 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   45 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   46 00000000         
   47 00000000         ; Pul_up
   48 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   49 00000000         
   50 00000000         ; Broches select
   51 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   52 00000000         
   53 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   54 00000000         



ARM Macro Assembler    Page 3 


   55 00000000 00000080 
                       BROCHE7 EQU              0x80        ; bouton poussoir 2
                                                            
   56 00000000         
   57 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; bouton poussoir 1
                                                             et 2
   58 00000000         
   59 00000000 00000001 
                       BROCHE0 EQU              0x01        ;bumper droit
   60 00000000         
   61 00000000 00000002 
                       BROCHE1 EQU              0x02        ;bumper gauche
   62 00000000         
   63 00000000 00000003 
                       BROCHE1_2
                               EQU              0x03        ;bumper droit et ga
                                                            uche
   64 00000000         
   65 00000000         ; blinking frequency
   66 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   67 00000000         
   68 00000000                 ENTRY
   69 00000000                 EXPORT           __main
   70 00000000         
   71 00000000         
   72 00000000         
   73 00000000         
   74 00000000         __main
   75 00000000         
   76 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   77 00000000         ; ;;         
   78 00000000 4E5B            ldr              r6, = SYSCTL_PERIPH_GPIO
   79 00000002         ;; RCGC2
   80 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   81 00000006         ; ;;                              (GPIO::FEDCBA)
   82 00000006 6030            str              r0, [r6]
   83 00000008         
   84 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   85 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   86 0000000A BF00            nop
   87 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   88 0000000E         
   89 0000000E         
   90 0000000E         ; Configure les PWM + GPIO
   91 0000000E F7FF FFFE       BL               MOTEUR_INIT
   92 00000012         
   93 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED



ARM Macro Assembler    Page 4 


   94 00000012         
   95 00000012 4E58            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   96 00000014 F04F 0030       ldr              r0, = BROCHE4_5
   97 00000018 6030            str              r0, [r6]
   98 0000001A         
   99 0000001A 4E57            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  100 0000001C F04F 0030       ldr              r0, = BROCHE4_5
  101 00000020 6030            str              r0, [r6]
  102 00000022         
  103 00000022 4E56            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  104 00000024 F04F 0030       ldr              r0, = BROCHE4_5
  105 00000028 6030            str              r0, [r6]
  106 0000002A         
  107 0000002A F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  108 0000002E         
  109 0000002E         
  110 0000002E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper droi
                       t et gauche
  111 0000002E         
  112 0000002E 4F54            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  113 00000030 F04F 0003       ldr              r0, = BROCHE1_2
  114 00000034 6038            str              r0, [r7]
  115 00000036         
  116 00000036 4F53            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  117 00000038 F04F 0003       ldr              r0, = BROCHE1_2
  118 0000003C 6038            str              r0, [r7]
  119 0000003E         
  120 0000003E         
  121 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2
  122 0000003E         
  123 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_I_PUR ;; Pul_up 
  124 0000003E         ;ldr r0, = BROCHE6_7 
  125 0000003E         ;str r0, [r8]
  126 0000003E         
  127 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_O_DEN ;; Enable Digital 
                       Function 
  128 0000003E         ;ldr r0, = BROCHE6_7
  129 0000003E         ;str r0, [r8]
  130 0000003E         
  131 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2



ARM Macro Assembler    Page 5 


  132 0000003E         
  133 0000003E 4F52            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  134 00000040 F04F 00C0       ldr              r0, = BROCHE6_7
  135 00000044 6038            str              r0, [r7]
  136 00000046         
  137 00000046 4F51            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  138 00000048 F04F 00C0       ldr              r0, = BROCHE6_7
  139 0000004C 6038            str              r0, [r7]
  140 0000004E         
  141 0000004E 4F50            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6_7<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  142 00000050         
  143 00000050         ;;----------------------CONF_SWITCHS
  144 00000050         ;LDR R0, =BROCHE6_7       ;; Get the value to enable PIN
                       S 6 & 7 on PORTD
  145 00000050         ;LDR R12, =GPIO_PORTD_BASE+GPIO_O_DEN   ;;
  146 00000050         ;STR R0, [R7]        ;; Enable PINS 6 & 7 on PORTD with 
                       GPIO_O_DEN  
  147 00000050         ;LDR R12, =GPIO_PORTD_BASE+GPIO_I_PUR   ;;
  148 00000050         ;STR R0, [R7]        ;; Enable PINS 6 & 7 on PORTD with 
                       GPIO_O_PUR
  149 00000050         ;LDR R12, =GPIO_PORTD_BASE+(BROCHE6_7<<2)  ;; Enable Swi
                       tchs that correspond to PORTD PINS 6 & 7 values
  150 00000050         ;;----------------------END CONF_SWITCHS
  151 00000050         
  152 00000050         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  153 00000050         
  154 00000050         ;phase de mise en grille
  155 00000050         ; Activer les deux moteurs droit et gauche
  156 00000050         
  157 00000050         PLACEMENT
  158 00000050 F7FF FFFE       BL               MOTEUR_INIT
  159 00000054 F7FF FFFE       BL               MOTEUR_DROIT_ON
  160 00000058 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  161 0000005C         ; Evalbot avance droit devant
  162 0000005C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  163 00000060 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  164 00000064 F000 F840       BL               WAITmg
  165 00000068         
  166 00000068 F000 F84E       BL               WAITstart
  167 0000006C         
  168 0000006C E7F0            b                PLACEMENT
  169 0000006E         
  170 0000006E         ;phase de course
  171 0000006E         loop
  172 0000006E F04F 0300       mov              r3, #0      ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000  
  173 00000072 4E48            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =



ARM Macro Assembler    Page 6 


                                                             @base + (mask<<2) 
                                                            ==> LED1
  174 00000074 6033            str              r3, [r6]    ;mov r3, #0x000
  175 00000076         ; Activer les deux moteurs droit et gauche
  176 00000076 F7FF FFFE       BL               MOTEUR_DROIT_ON
  177 0000007A F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  178 0000007E         ; Evalbot avance droit devant
  179 0000007E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  180 00000082 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  181 00000086         
  182 00000086 F000 F849       BL               WAIT
  183 0000008A         
  184 0000008A E7F0            b                loop
  185 0000008C         
  186 0000008C         BD_actif
  187 0000008C         
  188 0000008C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  189 00000090 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  190 00000094 F000 F858       BL               WAITar
  191 00000098 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  192 0000009C F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  193 000000A0 F000 F85A       BL               WAITtourne
  194 000000A4 E7E3            b                loop
  195 000000A6         
  196 000000A6         BG_actif
  197 000000A6         
  198 000000A6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  199 000000AA F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  200 000000AE F000 F84B       BL               WAITar
  201 000000B2 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  202 000000B6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  203 000000BA F000 F84D       BL               WAITtourne
  204 000000BE E7D6            b                loop
  205 000000C0         
  206 000000C0         B_actif_depart
  207 000000C0         
  208 000000C0 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  209 000000C4 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  210 000000C8         
  211 000000C8 E01E            b                WAITstart
  212 000000CA         
  213 000000CA         SW1_actif
  214 000000CA         
  215 000000CA F7FF FFFE       BL               MOTEUR_DROIT_OFF
  216 000000CE F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  217 000000D2 F000 F845       BL               WAIToff
  218 000000D6 E7F8            b                SW1_actif
  219 000000D8         
  220 000000D8         SW2_actif
  221 000000D8 492F            ldr              r1, =0xFAAAAA
  222 000000DA         ; allumer la led broche 4 et 5 (BROCHE4_5)
  223 000000DA F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  224 000000DE 4E2D            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1



ARM Macro Assembler    Page 7 


  225 000000E0 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  226 000000E2         wait4
  227 000000E2 3901            subs             r1, #1
  228 000000E4 D1FD            bne              wait4
  229 000000E6 E7C2            b                loop
  230 000000E8         
  231 000000E8         ;; Boucle d'attente pour la mise en grille
  232 000000E8         WAITmg
  233 000000E8 492C            ldr              r1, =0xAFFFFF
  234 000000EA         wait5
  235 000000EA 4F2D            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  236 000000EC F8D7 A000       ldr              r10,[r7]
  237 000000F0 F1BA 0F00       CMP              r10,#0x00
  238 000000F4 D0E4            BEQ              B_actif_depart
  239 000000F6         
  240 000000F6 4F2B            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  241 000000F8 F8D7 A000       ldr              r10,[r7]
  242 000000FC F1BA 0F00       CMP              r10,#0x00
  243 00000100 D0DE            BEQ              B_actif_depart
  244 00000102         
  245 00000102 3901            subs             r1, #1
  246 00000104 D1F1            bne              wait5
  247 00000106 E7A3            b                PLACEMENT
  248 00000108         
  249 00000108         ;; Boucle d'attente pour le départ
  250 00000108         WAITstart
  251 00000108 4924            ldr              r1, =0xAFFFFF
  252 0000010A         wait
  253 0000010A 4F27            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
7<<2)
  254 0000010C F8D7 A000       ldr              r10,[r7]
  255 00000110 F1BA 0F00       CMP              r10,#0x00
  256 00000114 D0E0            BEQ              SW2_actif
  257 00000116         
  258 00000116 3901            subs             r1, #1
  259 00000118 D1F7            bne              wait
  260 0000011A E7F5            b                WAITstart
  261 0000011C         
  262 0000011C         ;; Boucle d'attente pour la marche avant
  263 0000011C 491F    WAIT    ldr              r1, =0xAFFFFF
  264 0000011E         wait1
  265 0000011E 4F20            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  266 00000120 F8D7 A000       ldr              r10,[r7]
  267 00000124 F1BA 0F00       CMP              r10,#0x00
  268 00000128 D0B0            BEQ              BD_actif
  269 0000012A         
  270 0000012A 4F1E            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  271 0000012C F8D7 A000       ldr              r10,[r7]
  272 00000130 F1BA 0F00       CMP              r10,#0x00
  273 00000134 D0B7            BEQ              BG_actif
  274 00000136         
  275 00000136 4F1D            ldr              r7, = GPIO_PORTD_BASE + (BROCHE



ARM Macro Assembler    Page 8 


6<<2)
  276 00000138 F8D7 A000       ldr              r10,[r7]
  277 0000013C F1BA 0F00       CMP              r10,#0x00
  278 00000140 D0C3            BEQ              SW1_actif
  279 00000142         
  280 00000142 3901            subs             r1, #1
  281 00000144 D1EB            bne              wait1
  282 00000146         
  283 00000146         ;; retour à la suite du lien de branchement
  284 00000146 4770            BX               LR
  285 00000148         
  286 00000148         ;; Boucle d'attente lors la marche arrière
  287 00000148 4919    WAITar  ldr              r1, =0x105FFF
  288 0000014A         wait2
  289 0000014A         ; allumer la led broche 4 et 5 (BROCHE4_5)
  290 0000014A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  291 0000014E 4E11            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  292 00000150 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  293 00000152         
  294 00000152 3901            subs             r1, #1
  295 00000154 D1F9            bne              wait2
  296 00000156         
  297 00000156         ;; retour à la suite du lien de branchement
  298 00000156 4770            BX               LR
  299 00000158         
  300 00000158         
  301 00000158         ;; Boucle d'attente lors la marche arrière
  302 00000158         WAITtourne
  303 00000158 4916            ldr              r1, =0x35FFFF
  304 0000015A         wait3
  305 0000015A 3901            subs             r1, #1
  306 0000015C D1FD            bne              wait3
  307 0000015E         
  308 0000015E         ;; retour à la suite du lien de branchement
  309 0000015E 4770            BX               LR
  310 00000160         
  311 00000160         WAIToff
  312 00000160 4F12            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  313 00000162 F8D7 A000       ldr              r10,[r7]
  314 00000166 F1BA 0F00       CMP              r10,#0x00
  315 0000016A D080            BEQ              loop
  316 0000016C         
  317 0000016C         ;; retour à la suite du lien de branchement
  318 0000016C 4770            BX               LR
  319 0000016E         
  320 0000016E BF00            NOP
  321 00000170                 END
              400FE108 
              40025400 



ARM Macro Assembler    Page 9 


              4002551C 
              40025500 
              40024510 
              4002451C 
              40007510 
              4000751C 
              40007300 
              400250C0 
              00FAAAAA 
              00AFFFFF 
              40024004 
              40024008 
              40007200 
              40007100 
              00105FFF 
              0035FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file script.s
   Uses
      None
Comment: .text unused
BD_actif 0000008C

Symbol: BD_actif
   Definitions
      At line 186 in file script.s
   Uses
      At line 268 in file script.s
Comment: BD_actif used once
BG_actif 000000A6

Symbol: BG_actif
   Definitions
      At line 196 in file script.s
   Uses
      At line 273 in file script.s
Comment: BG_actif used once
B_actif_depart 000000C0

Symbol: B_actif_depart
   Definitions
      At line 206 in file script.s
   Uses
      At line 238 in file script.s
      At line 243 in file script.s

PLACEMENT 00000050

Symbol: PLACEMENT
   Definitions
      At line 157 in file script.s
   Uses
      At line 168 in file script.s
      At line 247 in file script.s

SW1_actif 000000CA

Symbol: SW1_actif
   Definitions
      At line 213 in file script.s
   Uses
      At line 218 in file script.s
      At line 278 in file script.s

SW2_actif 000000D8

Symbol: SW2_actif
   Definitions
      At line 220 in file script.s
   Uses
      At line 256 in file script.s
Comment: SW2_actif used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

WAIT 0000011C

Symbol: WAIT
   Definitions
      At line 263 in file script.s
   Uses
      At line 182 in file script.s
Comment: WAIT used once
WAITar 00000148

Symbol: WAITar
   Definitions
      At line 287 in file script.s
   Uses
      At line 190 in file script.s
      At line 200 in file script.s

WAITmg 000000E8

Symbol: WAITmg
   Definitions
      At line 232 in file script.s
   Uses
      At line 164 in file script.s
Comment: WAITmg used once
WAIToff 00000160

Symbol: WAIToff
   Definitions
      At line 311 in file script.s
   Uses
      At line 217 in file script.s
Comment: WAIToff used once
WAITstart 00000108

Symbol: WAITstart
   Definitions
      At line 250 in file script.s
   Uses
      At line 166 in file script.s
      At line 211 in file script.s
      At line 260 in file script.s

WAITtourne 00000158

Symbol: WAITtourne
   Definitions
      At line 302 in file script.s
   Uses
      At line 193 in file script.s
      At line 203 in file script.s

__main 00000000

Symbol: __main
   Definitions
      At line 74 in file script.s
   Uses
      At line 69 in file script.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: __main used once
loop 0000006E

Symbol: loop
   Definitions
      At line 171 in file script.s
   Uses
      At line 184 in file script.s
      At line 194 in file script.s
      At line 204 in file script.s
      At line 229 in file script.s
      At line 315 in file script.s

wait 0000010A

Symbol: wait
   Definitions
      At line 252 in file script.s
   Uses
      At line 259 in file script.s
Comment: wait used once
wait1 0000011E

Symbol: wait1
   Definitions
      At line 264 in file script.s
   Uses
      At line 281 in file script.s
Comment: wait1 used once
wait2 0000014A

Symbol: wait2
   Definitions
      At line 288 in file script.s
   Uses
      At line 295 in file script.s
Comment: wait2 used once
wait3 0000015A

Symbol: wait3
   Definitions
      At line 304 in file script.s
   Uses
      At line 306 in file script.s
Comment: wait3 used once
wait4 000000E2

Symbol: wait4
   Definitions
      At line 226 in file script.s
   Uses
      At line 228 in file script.s
Comment: wait4 used once
wait5 000000EA

Symbol: wait5
   Definitions
      At line 234 in file script.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 246 in file script.s
Comment: wait5 used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 59 in file script.s
   Uses
      At line 235 in file script.s
      At line 265 in file script.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 61 in file script.s
   Uses
      At line 240 in file script.s
      At line 270 in file script.s

BROCHE1_2 00000003

Symbol: BROCHE1_2
   Definitions
      At line 63 in file script.s
   Uses
      At line 113 in file script.s
      At line 117 in file script.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 51 in file script.s
   Uses
      At line 96 in file script.s
      At line 100 in file script.s
      At line 104 in file script.s
      At line 173 in file script.s
      At line 223 in file script.s
      At line 224 in file script.s
      At line 290 in file script.s
      At line 291 in file script.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 53 in file script.s
   Uses
      At line 275 in file script.s
      At line 312 in file script.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 57 in file script.s
   Uses
      At line 134 in file script.s
      At line 138 in file script.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 141 in file script.s

BROCHE7 00000080

Symbol: BROCHE7
   Definitions
      At line 55 in file script.s
   Uses
      At line 253 in file script.s
Comment: BROCHE7 used once
DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 66 in file script.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 48 in file script.s
   Uses
      At line 112 in file script.s
      At line 133 in file script.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 45 in file script.s
   Uses
      At line 99 in file script.s
      At line 116 in file script.s
      At line 137 in file script.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 37 in file script.s
   Uses
      At line 95 in file script.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 41 in file script.s
   Uses
      At line 103 in file script.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 30 in file script.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 133 in file script.s
      At line 137 in file script.s
      At line 141 in file script.s
      At line 253 in file script.s
      At line 275 in file script.s
      At line 312 in file script.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 33 in file script.s
   Uses
      At line 112 in file script.s
      At line 116 in file script.s
      At line 235 in file script.s
      At line 240 in file script.s
      At line 265 in file script.s
      At line 270 in file script.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 27 in file script.s
   Uses
      At line 95 in file script.s
      At line 99 in file script.s
      At line 103 in file script.s
      At line 173 in file script.s
      At line 224 in file script.s
      At line 291 in file script.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 24 in file script.s
   Uses
      At line 78 in file script.s
Comment: SYSCTL_PERIPH_GPIO used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 14 in file script.s
   Uses
      At line 188 in file script.s
      At line 198 in file script.s
      At line 202 in file script.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 13 in file script.s
   Uses
      At line 162 in file script.s
      At line 179 in file script.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 15 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 12 in file script.s
   Uses
      At line 191 in file script.s
      At line 209 in file script.s
      At line 215 in file script.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 11 in file script.s
   Uses
      At line 159 in file script.s
      At line 176 in file script.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 20 in file script.s
   Uses
      At line 189 in file script.s
      At line 192 in file script.s
      At line 199 in file script.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 19 in file script.s
   Uses
      At line 163 in file script.s
      At line 180 in file script.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 21 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 18 in file script.s
   Uses
      At line 201 in file script.s
      At line 208 in file script.s
      At line 216 in file script.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 17 in file script.s
   Uses
      At line 160 in file script.s
      At line 177 in file script.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 9 in file script.s
   Uses
      At line 91 in file script.s
      At line 158 in file script.s

11 symbols
385 symbols in table
