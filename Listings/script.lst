


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; The GPIODATA register is the data register
   33 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   34 00000000         
   35 00000000         ; configure the corresponding pin to be an output
   36 00000000         ; all GPIO pins are inputs by default
   37 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   38 00000000         
   39 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   40 00000000         ; By default, all GPIO pins have 2-mA drive.
   41 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   42 00000000         
   43 00000000         ; Digital enable register
   44 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   45 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   46 00000000         
   47 00000000         ; Pul_up
   48 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   49 00000000         
   50 00000000         ; Broches select
   51 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   52 00000000         
   53 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   54 00000000         



ARM Macro Assembler    Page 3 


   55 00000000 00000080 
                       BROCHE7 EQU              0x80        ; bouton poussoir 2
                                                            
   56 00000000         
   57 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; bouton poussoir 1
                                                             et 2
   58 00000000         
   59 00000000 00000001 
                       BROCHE0 EQU              0x01        ;bumper droit
   60 00000000         
   61 00000000 00000002 
                       BROCHE1 EQU              0x02        ;bumper gauche
   62 00000000         
   63 00000000 00000003 
                       BROCHE1_2
                               EQU              0x03        ;bumper droit et ga
                                                            uche
   64 00000000         
   65 00000000         ; blinking frequency
   66 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   67 00000000         
   68 00000000                 ENTRY
   69 00000000                 EXPORT           __main
   70 00000000         
   71 00000000         
   72 00000000         
   73 00000000         
   74 00000000         __main
   75 00000000         
   76 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   77 00000000         ; ;;         
   78 00000000 4E6B            ldr              r6, = SYSCTL_PERIPH_GPIO
   79 00000002         ;; RCGC2
   80 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   81 00000006         ; ;;                              (GPIO::FEDCBA)
   82 00000006 6030            str              r0, [r6]
   83 00000008         
   84 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   85 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   86 0000000A BF00            nop
   87 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   88 0000000E         
   89 0000000E         
   90 0000000E         ; Configure les PWM + GPIO
   91 0000000E F7FF FFFE       BL               MOTEUR_INIT
   92 00000012         
   93 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED



ARM Macro Assembler    Page 4 


   94 00000012         
   95 00000012 4E68            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   96 00000014 F04F 0030       ldr              r0, = BROCHE4_5
   97 00000018 6030            str              r0, [r6]
   98 0000001A         
   99 0000001A 4E67            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  100 0000001C F04F 0030       ldr              r0, = BROCHE4_5
  101 00000020 6030            str              r0, [r6]
  102 00000022         
  103 00000022 4E66            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  104 00000024 F04F 0030       ldr              r0, = BROCHE4_5
  105 00000028 6030            str              r0, [r6]
  106 0000002A         
  107 0000002A F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  108 0000002E         
  109 0000002E         
  110 0000002E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper droi
                       t et gauche
  111 0000002E         
  112 0000002E 4F64            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  113 00000030 F04F 0003       ldr              r0, = BROCHE1_2
  114 00000034 6038            str              r0, [r7]
  115 00000036         
  116 00000036 4F63            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  117 00000038 F04F 0003       ldr              r0, = BROCHE1_2
  118 0000003C 6038            str              r0, [r7]
  119 0000003E         
  120 0000003E         
  121 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2
  122 0000003E         
  123 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_I_PUR ;; Pul_up 
  124 0000003E         ;ldr r0, = BROCHE6_7 
  125 0000003E         ;str r0, [r8]
  126 0000003E         
  127 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_O_DEN ;; Enable Digital 
                       Function 
  128 0000003E         ;ldr r0, = BROCHE6_7
  129 0000003E         ;str r0, [r8]
  130 0000003E         
  131 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2



ARM Macro Assembler    Page 5 


  132 0000003E         
  133 0000003E 4F62            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  134 00000040 F04F 00C0       ldr              r0, = BROCHE6_7
  135 00000044 6038            str              r0, [r7]
  136 00000046         
  137 00000046 4F61            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  138 00000048 F04F 00C0       ldr              r0, = BROCHE6_7
  139 0000004C 6038            str              r0, [r7]
  140 0000004E         
  141 0000004E 4F60            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6_7<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  142 00000050         
  143 00000050         ;;----------------------CONF_SWITCHS
  144 00000050         ;LDR R0, =BROCHE6_7       ;; Get the value to enable PIN
                       S 6 & 7 on PORTD
  145 00000050         ;LDR R12, =GPIO_PORTD_BASE+GPIO_O_DEN   ;;
  146 00000050         ;STR R0, [R7]        ;; Enable PINS 6 & 7 on PORTD with 
                       GPIO_O_DEN  
  147 00000050         ;LDR R12, =GPIO_PORTD_BASE+GPIO_I_PUR   ;;
  148 00000050         ;STR R0, [R7]        ;; Enable PINS 6 & 7 on PORTD with 
                       GPIO_O_PUR
  149 00000050         ;LDR R12, =GPIO_PORTD_BASE+(BROCHE6_7<<2)  ;; Enable Swi
                       tchs that correspond to PORTD PINS 6 & 7 values
  150 00000050         ;;----------------------END CONF_SWITCHS
  151 00000050         
  152 00000050         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  153 00000050         
  154 00000050         ;phase de mise en grille
  155 00000050         ; Activer les deux moteurs droit et gauche
  156 00000050         
  157 00000050         PLACEMENT
  158 00000050 F7FF FFFE       BL               MOTEUR_INIT
  159 00000054 F7FF FFFE       BL               MOTEUR_DROIT_ON
  160 00000058 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  161 0000005C         ; Evalbot avance droit devant
  162 0000005C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  163 00000060 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  164 00000064 F000 F857       BL               WAITmg
  165 00000068         
  166 00000068 F000 F865       BL               WAITstart
  167 0000006C         
  168 0000006C E7F0            b                PLACEMENT
  169 0000006E         
  170 0000006E         ;phase de course
  171 0000006E         loop
  172 0000006E F04F 0300       mov              r3, #0      ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000  
  173 00000072 4E58            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =



ARM Macro Assembler    Page 6 


                                                             @base + (mask<<2) 
                                                            ==> LED1
  174 00000074 6033            str              r3, [r6]    ;mov r3, #0x000
  175 00000076         ; Activer les deux moteurs droit et gauche
  176 00000076 F7FF FFFE       BL               MOTEUR_DROIT_ON
  177 0000007A F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  178 0000007E         ; Evalbot avance droit devant
  179 0000007E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  180 00000082 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  181 00000086         
  182 00000086 F000 F860       BL               WAIT
  183 0000008A         
  184 0000008A E7F0            b                loop
  185 0000008C         
  186 0000008C         BD_actif
  187 0000008C         
  188 0000008C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  189 00000090 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  190 00000094 F000 F876       BL               WAITar
  191 00000098 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  192 0000009C F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  193 000000A0 F000 F878       BL               WAITtourne
  194 000000A4 E7E3            b                loop
  195 000000A6         
  196 000000A6         BG_actif
  197 000000A6         
  198 000000A6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  199 000000AA F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  200 000000AE F000 F869       BL               WAITar
  201 000000B2 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  202 000000B6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  203 000000BA F000 F86B       BL               WAITtourne
  204 000000BE E7D6            b                loop
  205 000000C0         
  206 000000C0         CELEBRATION
  207 000000C0 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  208 000000C4 F7FF FFFE       BL               MOTEUR_DROIT_ON
  209 000000C8 F000 F81B       BL               WAITcelebration
  210 000000CC F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  211 000000D0 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  212 000000D4 F000 F815       BL               WAITcelebration
  213 000000D8 E7F2            b                CELEBRATION
  214 000000DA         
  215 000000DA         B_actif_depart
  216 000000DA         
  217 000000DA F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  218 000000DE F7FF FFFE       BL               MOTEUR_DROIT_OFF
  219 000000E2         
  220 000000E2 E028            b                WAITstart
  221 000000E4         
  222 000000E4         SW1_actif
  223 000000E4         
  224 000000E4 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  225 000000E8 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  226 000000EC F000 F856       BL               WAIToff
  227 000000F0 E7F8            b                SW1_actif
  228 000000F2         
  229 000000F2         SW2_actif
  230 000000F2 4939            ldr              r1, =0xFAAAAA



ARM Macro Assembler    Page 7 


  231 000000F4         ; allumer la led broche 4 et 5 (BROCHE4_5)
  232 000000F4 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  233 000000F8 4E36            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  234 000000FA 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  235 000000FC         wait4
  236 000000FC 3901            subs             r1, #1
  237 000000FE D1FD            bne              wait4
  238 00000100 E7B5            b                loop
  239 00000102         
  240 00000102         ;; Boucle d'attente pour la celebration
  241 00000102         WAITcelebration
  242 00000102 4936            ldr              r1, =0x1CFFFF
  243 00000104         wait6
  244 00000104 4F36            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  245 00000106 F8D7 A000       ldr              r10,[r7]
  246 0000010A F1BA 0F00       CMP              r10,#0x00
  247 0000010E D0AE            BEQ              loop
  248 00000110         
  249 00000110 3901            subs             r1, #1
  250 00000112 D1F7            bne              wait6
  251 00000114         
  252 00000114         ;; retour à la suite du lien de branchement
  253 00000114 4770            BX               LR
  254 00000116         
  255 00000116         ;; Boucle d'attente pour la mise en grille
  256 00000116         WAITmg
  257 00000116 4933            ldr              r1, =0xAFFFFF
  258 00000118         wait5
  259 00000118 4F33            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  260 0000011A F8D7 A000       ldr              r10,[r7]
  261 0000011E F1BA 0F00       CMP              r10,#0x00
  262 00000122 D0DA            BEQ              B_actif_depart
  263 00000124         
  264 00000124 4F31            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  265 00000126 F8D7 A000       ldr              r10,[r7]
  266 0000012A F1BA 0F00       CMP              r10,#0x00
  267 0000012E D0D4            BEQ              B_actif_depart
  268 00000130         
  269 00000130 3901            subs             r1, #1
  270 00000132 D1F1            bne              wait5
  271 00000134 E78C            b                PLACEMENT
  272 00000136         
  273 00000136         ;; Boucle d'attente pour le départ
  274 00000136         WAITstart
  275 00000136 492B            ldr              r1, =0xAFFFFF
  276 00000138         wait
  277 00000138 4F2D            ldr              r7, = GPIO_PORTD_BASE + (BROCHE



ARM Macro Assembler    Page 8 


7<<2)
  278 0000013A F8D7 A000       ldr              r10,[r7]
  279 0000013E F1BA 0F00       CMP              r10,#0x00
  280 00000142 D0D6            BEQ              SW2_actif
  281 00000144         
  282 00000144 3901            subs             r1, #1
  283 00000146 D1F7            bne              wait
  284 00000148 E7F5            b                WAITstart
  285 0000014A         
  286 0000014A         ;; Boucle d'attente pour la marche avant
  287 0000014A F06F 417F 
                       WAIT    ldr              r1, =0xFFFFFF
  288 0000014E         wait1
  289 0000014E 4F26            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  290 00000150 F8D7 A000       ldr              r10,[r7]
  291 00000154 F1BA 0F00       CMP              r10,#0x00
  292 00000158 D098            BEQ              BD_actif
  293 0000015A         
  294 0000015A 4F24            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  295 0000015C F8D7 A000       ldr              r10,[r7]
  296 00000160 F1BA 0F00       CMP              r10,#0x00
  297 00000164 D09F            BEQ              BG_actif
  298 00000166         
  299 00000166 4F1E            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  300 00000168 F8D7 A000       ldr              r10,[r7]
  301 0000016C F1BA 0F00       CMP              r10,#0x00
  302 00000170 D0B8            BEQ              SW1_actif
  303 00000172         
  304 00000172 4F1F            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
7<<2)
  305 00000174 F8D7 A000       ldr              r10,[r7]
  306 00000178 F1BA 0F00       CMP              r10,#0x00
  307 0000017C D0A0            BEQ              CELEBRATION
  308 0000017E         
  309 0000017E 3901            subs             r1, #1
  310 00000180 D1E5            bne              wait1
  311 00000182         
  312 00000182         ;; retour à la suite du lien de branchement
  313 00000182 4770            BX               LR
  314 00000184         
  315 00000184         ;; Boucle d'attente lors la marche arrière
  316 00000184 491B    WAITar  ldr              r1, =0x0A0FFF
  317 00000186         wait2
  318 00000186         ; allumer la led broche 4 et 5 (BROCHE4_5)
  319 00000186 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  320 0000018A 4E12            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  321 0000018C 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)



ARM Macro Assembler    Page 9 


  322 0000018E         
  323 0000018E 3901            subs             r1, #1
  324 00000190 D1F9            bne              wait2
  325 00000192         
  326 00000192         ;; retour à la suite du lien de branchement
  327 00000192 4770            BX               LR
  328 00000194         
  329 00000194         
  330 00000194         ;; Boucle d'attente lors la marche arrière
  331 00000194         WAITtourne
  332 00000194 4918            ldr              r1, =0x38FFFF
  333 00000196         wait3
  334 00000196 3901            subs             r1, #1
  335 00000198 D1FD            bne              wait3
  336 0000019A         
  337 0000019A         ;; retour à la suite du lien de branchement
  338 0000019A 4770            BX               LR
  339 0000019C         
  340 0000019C         WAIToff
  341 0000019C 4F10            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  342 0000019E F8D7 A000       ldr              r10,[r7]
  343 000001A2 F1BA 0F00       CMP              r10,#0x00
  344 000001A6 F43F AF62       BEQ              loop
  345 000001AA         
  346 000001AA         ;; retour à la suite du lien de branchement
  347 000001AA 4770            BX               LR
  348 000001AC         
  349 000001AC BF00            NOP
  350 000001AE                 END
              00 00 400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              40007510 
              4000751C 
              40007300 
              400250C0 
              00FAAAAA 
              001CFFFF 
              40007100 
              00AFFFFF 
              40024004 
              40024008 
              40007200 
              000A0FFF 
              0038FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file script.s
   Uses
      None
Comment: .text unused
BD_actif 0000008C

Symbol: BD_actif
   Definitions
      At line 186 in file script.s
   Uses
      At line 292 in file script.s
Comment: BD_actif used once
BG_actif 000000A6

Symbol: BG_actif
   Definitions
      At line 196 in file script.s
   Uses
      At line 297 in file script.s
Comment: BG_actif used once
B_actif_depart 000000DA

Symbol: B_actif_depart
   Definitions
      At line 215 in file script.s
   Uses
      At line 262 in file script.s
      At line 267 in file script.s

CELEBRATION 000000C0

Symbol: CELEBRATION
   Definitions
      At line 206 in file script.s
   Uses
      At line 213 in file script.s
      At line 307 in file script.s

PLACEMENT 00000050

Symbol: PLACEMENT
   Definitions
      At line 157 in file script.s
   Uses
      At line 168 in file script.s
      At line 271 in file script.s

SW1_actif 000000E4

Symbol: SW1_actif
   Definitions
      At line 222 in file script.s
   Uses
      At line 227 in file script.s
      At line 302 in file script.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


SW2_actif 000000F2

Symbol: SW2_actif
   Definitions
      At line 229 in file script.s
   Uses
      At line 280 in file script.s
Comment: SW2_actif used once
WAIT 0000014A

Symbol: WAIT
   Definitions
      At line 287 in file script.s
   Uses
      At line 182 in file script.s
Comment: WAIT used once
WAITar 00000184

Symbol: WAITar
   Definitions
      At line 316 in file script.s
   Uses
      At line 190 in file script.s
      At line 200 in file script.s

WAITcelebration 00000102

Symbol: WAITcelebration
   Definitions
      At line 241 in file script.s
   Uses
      At line 209 in file script.s
      At line 212 in file script.s

WAITmg 00000116

Symbol: WAITmg
   Definitions
      At line 256 in file script.s
   Uses
      At line 164 in file script.s
Comment: WAITmg used once
WAIToff 0000019C

Symbol: WAIToff
   Definitions
      At line 340 in file script.s
   Uses
      At line 226 in file script.s
Comment: WAIToff used once
WAITstart 00000136

Symbol: WAITstart
   Definitions
      At line 274 in file script.s
   Uses
      At line 166 in file script.s
      At line 220 in file script.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 284 in file script.s

WAITtourne 00000194

Symbol: WAITtourne
   Definitions
      At line 331 in file script.s
   Uses
      At line 193 in file script.s
      At line 203 in file script.s

__main 00000000

Symbol: __main
   Definitions
      At line 74 in file script.s
   Uses
      At line 69 in file script.s
Comment: __main used once
loop 0000006E

Symbol: loop
   Definitions
      At line 171 in file script.s
   Uses
      At line 184 in file script.s
      At line 194 in file script.s
      At line 204 in file script.s
      At line 238 in file script.s
      At line 247 in file script.s
      At line 344 in file script.s

wait 00000138

Symbol: wait
   Definitions
      At line 276 in file script.s
   Uses
      At line 283 in file script.s
Comment: wait used once
wait1 0000014E

Symbol: wait1
   Definitions
      At line 288 in file script.s
   Uses
      At line 310 in file script.s
Comment: wait1 used once
wait2 00000186

Symbol: wait2
   Definitions
      At line 317 in file script.s
   Uses
      At line 324 in file script.s
Comment: wait2 used once
wait3 00000196

Symbol: wait3



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 333 in file script.s
   Uses
      At line 335 in file script.s
Comment: wait3 used once
wait4 000000FC

Symbol: wait4
   Definitions
      At line 235 in file script.s
   Uses
      At line 237 in file script.s
Comment: wait4 used once
wait5 00000118

Symbol: wait5
   Definitions
      At line 258 in file script.s
   Uses
      At line 270 in file script.s
Comment: wait5 used once
wait6 00000104

Symbol: wait6
   Definitions
      At line 243 in file script.s
   Uses
      At line 250 in file script.s
Comment: wait6 used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 59 in file script.s
   Uses
      At line 259 in file script.s
      At line 289 in file script.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 61 in file script.s
   Uses
      At line 264 in file script.s
      At line 294 in file script.s

BROCHE1_2 00000003

Symbol: BROCHE1_2
   Definitions
      At line 63 in file script.s
   Uses
      At line 113 in file script.s
      At line 117 in file script.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 51 in file script.s
   Uses
      At line 96 in file script.s
      At line 100 in file script.s
      At line 104 in file script.s
      At line 173 in file script.s
      At line 232 in file script.s
      At line 233 in file script.s
      At line 319 in file script.s
      At line 320 in file script.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 53 in file script.s
   Uses
      At line 244 in file script.s
      At line 299 in file script.s
      At line 341 in file script.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 57 in file script.s
   Uses
      At line 134 in file script.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 138 in file script.s
      At line 141 in file script.s

BROCHE7 00000080

Symbol: BROCHE7
   Definitions
      At line 55 in file script.s
   Uses
      At line 277 in file script.s
      At line 304 in file script.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 66 in file script.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 48 in file script.s
   Uses
      At line 112 in file script.s
      At line 133 in file script.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 45 in file script.s
   Uses
      At line 99 in file script.s
      At line 116 in file script.s
      At line 137 in file script.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 37 in file script.s
   Uses
      At line 95 in file script.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 41 in file script.s
   Uses
      At line 103 in file script.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 30 in file script.s
   Uses
      At line 133 in file script.s
      At line 137 in file script.s
      At line 141 in file script.s
      At line 244 in file script.s
      At line 277 in file script.s
      At line 299 in file script.s
      At line 304 in file script.s
      At line 341 in file script.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 33 in file script.s
   Uses
      At line 112 in file script.s
      At line 116 in file script.s
      At line 259 in file script.s
      At line 264 in file script.s
      At line 289 in file script.s
      At line 294 in file script.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 27 in file script.s
   Uses
      At line 95 in file script.s
      At line 99 in file script.s
      At line 103 in file script.s
      At line 173 in file script.s
      At line 233 in file script.s
      At line 320 in file script.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 24 in file script.s
   Uses
      At line 78 in file script.s
Comment: SYSCTL_PERIPH_GPIO used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 14 in file script.s
   Uses
      At line 188 in file script.s
      At line 198 in file script.s
      At line 202 in file script.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 13 in file script.s
   Uses
      At line 162 in file script.s
      At line 179 in file script.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 15 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 12 in file script.s
   Uses
      At line 191 in file script.s
      At line 211 in file script.s
      At line 218 in file script.s
      At line 224 in file script.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 11 in file script.s
   Uses
      At line 159 in file script.s
      At line 176 in file script.s
      At line 208 in file script.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 20 in file script.s
   Uses
      At line 189 in file script.s
      At line 192 in file script.s
      At line 199 in file script.s

MOTEUR_GAUCHE_AVANT 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 19 in file script.s
   Uses
      At line 163 in file script.s
      At line 180 in file script.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 21 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 18 in file script.s
   Uses
      At line 201 in file script.s
      At line 207 in file script.s
      At line 217 in file script.s
      At line 225 in file script.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 17 in file script.s
   Uses
      At line 160 in file script.s
      At line 177 in file script.s
      At line 210 in file script.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 9 in file script.s
   Uses
      At line 91 in file script.s
      At line 158 in file script.s

11 symbols
388 symbols in table
