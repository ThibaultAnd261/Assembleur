


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; The GPIODATA register is the data register
   33 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   34 00000000         
   35 00000000         ; configure the corresponding pin to be an output
   36 00000000         ; all GPIO pins are inputs by default
   37 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   38 00000000         
   39 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   40 00000000         ; By default, all GPIO pins have 2-mA drive.
   41 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   42 00000000         
   43 00000000         ; Digital enable register
   44 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   45 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   46 00000000         
   47 00000000         ; Pul_up
   48 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   49 00000000         
   50 00000000         ; Broches select
   51 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   52 00000000         
   53 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   54 00000000         



ARM Macro Assembler    Page 3 


   55 00000000 00000080 
                       BROCHE7 EQU              0x80        ; bonton poussoir 2
                                                            
   56 00000000         
   57 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; bonton poussoir 1
                                                             et 2
   58 00000000         
   59 00000000 00000001 
                       BROCHE0 EQU              0x01        ;bumper droit
   60 00000000         
   61 00000000 00000002 
                       BROCHE1 EQU              0x02        ;bumper gauche
   62 00000000         
   63 00000000 00000003 
                       BROCHE1_2
                               EQU              0x03        ;bumper droit et ga
                                                            uche
   64 00000000         
   65 00000000         ; blinking frequency
   66 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   67 00000000         
   68 00000000                 ENTRY
   69 00000000                 EXPORT           __main
   70 00000000         
   71 00000000         
   72 00000000         
   73 00000000         
   74 00000000         __main
   75 00000000         
   76 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   77 00000000         ; ;;         
   78 00000000 4E4B            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   79 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   80 00000006         ; ;;                              (GPIO::FEDCBA)
   81 00000006 6030            str              r0, [r6]
   82 00000008         
   83 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   84 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   85 0000000A BF00            nop
   86 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   87 0000000E         
   88 0000000E         
   89 0000000E         ; Configure les PWM + GPIO
   90 0000000E F7FF FFFE       BL               MOTEUR_INIT
   91 00000012         
   92 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED



ARM Macro Assembler    Page 4 


   93 00000012         
   94 00000012 4E48            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   95 00000014 F04F 0030       ldr              r0, = BROCHE4_5
   96 00000018 6030            str              r0, [r6]
   97 0000001A         
   98 0000001A 4E47            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   99 0000001C F04F 0030       ldr              r0, = BROCHE4_5
  100 00000020 6030            str              r0, [r6]
  101 00000022         
  102 00000022 4E46            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  103 00000024 F04F 0030       ldr              r0, = BROCHE4_5
  104 00000028 6030            str              r0, [r6]
  105 0000002A         
  106 0000002A F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  107 0000002E         
  108 0000002E         
  109 0000002E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper droi
                       t et gauche
  110 0000002E         
  111 0000002E 4F44            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  112 00000030 F04F 0003       ldr              r0, = BROCHE1_2
  113 00000034 6038            str              r0, [r7]
  114 00000036         
  115 00000036 4F43            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  116 00000038 F04F 0003       ldr              r0, = BROCHE1_2
  117 0000003C 6038            str              r0, [r7]
  118 0000003E         
  119 0000003E         
  120 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2
  121 0000003E         
  122 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_I_PUR ;; Pul_up 
  123 0000003E         ;ldr r0, = BROCHE6_7 
  124 0000003E         ;str r0, [r8]
  125 0000003E         
  126 0000003E         ;ldr r8, = GPIO_PORTD_BASE+GPIO_O_DEN ;; Enable Digital 
                       Function 
  127 0000003E         ;ldr r0, = BROCHE6_7
  128 0000003E         ;str r0, [r8]
  129 0000003E         
  130 0000003E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1 
                       et 2



ARM Macro Assembler    Page 5 


  131 0000003E         
  132 0000003E         ;ldr r7, = GPIO_PORTD_BASE+GPIO_I_PUR ;; Pul_up 
  133 0000003E         ;ldr r0, = BROCHE6_7
  134 0000003E         ;str r0, [r7]
  135 0000003E         
  136 0000003E         ;ldr r7, = GPIO_PORTD_BASE+GPIO_O_DEN ;; Enable Digital 
                       Function 
  137 0000003E         ;ldr r0, = BROCHE6_7 
  138 0000003E         ;str r0, [r7]     
  139 0000003E         
  140 0000003E         ;ldr r7, = GPIO_PORTD_BASE + (BROCHE6_7<<2)  ;; @data Re
                       gister = @base + (mask<<2) ==> Switcher
  141 0000003E         
  142 0000003E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  143 0000003E         
  144 0000003E         ;phase de mise en grille
  145 0000003E         ; Activer les deux moteurs droit et gauche
  146 0000003E         
  147 0000003E         PLACEMENT
  148 0000003E F7FF FFFE       BL               MOTEUR_DROIT_ON
  149 00000042 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  150 00000046         ; Evalbot avance droit devant
  151 00000046 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  152 0000004A F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  153 0000004E F000 F800       BL               WAITmg
  154 00000052         
  155 00000052 F000 F839       BL               WAITstart
  156 00000056         
  157 00000056 E7F2            b                PLACEMENT
  158 00000058         
  159 00000058         ;phase de course
  160 00000058         loop
  161 00000058 F04F 0300       mov              r3, #0      ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000  
  162 0000005C 4E3A            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  163 0000005E 6033            str              r3, [r6]    ;mov r3, #0x000
  164 00000060         ; Activer les deux moteurs droit et gauche
  165 00000060 F7FF FFFE       BL               MOTEUR_DROIT_ON
  166 00000064 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  167 00000068         ; Evalbot avance droit devant
  168 00000068 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  169 0000006C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  170 00000070         
  171 00000070 F000 F834       BL               WAIT
  172 00000074         
  173 00000074 E7F0            b                loop
  174 00000076         
  175 00000076         BD_actif
  176 00000076         
  177 00000076 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  178 0000007A F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  179 0000007E F000 F843       BL               WAITar
  180 00000082 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  181 00000086 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE



ARM Macro Assembler    Page 6 


  182 0000008A F000 F845       BL               WAITtourne
  183 0000008E E7E3            b                loop
  184 00000090         
  185 00000090         BG_actif
  186 00000090         
  187 00000090 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  188 00000094 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  189 00000098 F000 F836       BL               WAITar
  190 0000009C F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  191 000000A0 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  192 000000A4 F000 F838       BL               WAITtourne
  193 000000A8 E7D6            b                loop
  194 000000AA         
  195 000000AA         SW1_actif
  196 000000AA         
  197 000000AA F7FF FFFE       BL               MOTEUR_DROIT_OFF
  198 000000AE F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  199 000000B2 F000 F835       BL               WAIToff
  200 000000B6 E7F8            b                SW1_actif
  201 000000B8         
  202 000000B8         SW2_actif
  203 000000B8 4924            ldr              r1, =0xAAAAAA
  204 000000BA         ; allumer la led broche 4 et 5 (BROCHE4_5)
  205 000000BA F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  206 000000BE 4E22            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  207 000000C0 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  208 000000C2         wait4
  209 000000C2 3901            subs             r1, #1
  210 000000C4 D1FD            bne              wait4
  211 000000C6 E7C7            b                loop
  212 000000C8         
  213 000000C8         ;; Boucle d'attente pour la mise en grille
  214 000000C8         
  215 000000C8         ;; Boucle d'attente pour le départ
  216 000000C8         WAITstart
  217 000000C8 4921            ldr              r1, =0xAFFFFF
  218 000000CA         wait
  219 000000CA 4F22            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
7<<2)
  220 000000CC F8D7 A000       ldr              r10,[r7]
  221 000000D0 F1BA 0F00       CMP              r10,#0x00
  222 000000D4 D0F0            BEQ              SW2_actif
  223 000000D6         
  224 000000D6 3901            subs             r1, #1
  225 000000D8 D1F7            bne              wait
  226 000000DA 4770            BX               LR
  227 000000DC         
  228 000000DC         ;; Boucle d'attente pour la marche avant
  229 000000DC 491C    WAIT    ldr              r1, =0xAFFFFF
  230 000000DE         wait1



ARM Macro Assembler    Page 7 


  231 000000DE 4F1E            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  232 000000E0 F8D7 A000       ldr              r10,[r7]
  233 000000E4 F1BA 0F00       CMP              r10,#0x00
  234 000000E8 D0C5            BEQ              BD_actif
  235 000000EA         
  236 000000EA 4F1C            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  237 000000EC F8D7 A000       ldr              r10,[r7]
  238 000000F0 F1BA 0F00       CMP              r10,#0x00
  239 000000F4 D0CC            BEQ              BG_actif
  240 000000F6         
  241 000000F6 4F1A            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  242 000000F8 F8D7 A000       ldr              r10,[r7]
  243 000000FC F1BA 0F00       CMP              r10,#0x00
  244 00000100 D0D3            BEQ              SW1_actif
  245 00000102         
  246 00000102 3901            subs             r1, #1
  247 00000104 D1EB            bne              wait1
  248 00000106         
  249 00000106         ;; retour à la suite du lien de branchement
  250 00000106 4770            BX               LR
  251 00000108         
  252 00000108         ;; Boucle d'attente lors la marche arrière
  253 00000108 4916    WAITar  ldr              r1, =0x105FFF
  254 0000010A         wait2
  255 0000010A         ; allumer la led broche 4 et 5 (BROCHE4_5)
  256 0000010A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  257 0000010E 4E0E            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  258 00000110 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  259 00000112         
  260 00000112 3901            subs             r1, #1
  261 00000114 D1F9            bne              wait2
  262 00000116         
  263 00000116         ;; retour à la suite du lien de branchement
  264 00000116 4770            BX               LR
  265 00000118         
  266 00000118         
  267 00000118         ;; Boucle d'attente lors la marche arrière
  268 00000118         WAITtourne
  269 00000118 4913            ldr              r1, =0x35FFFF
  270 0000011A         wait3
  271 0000011A 3901            subs             r1, #1
  272 0000011C D1FD            bne              wait3
  273 0000011E         
  274 0000011E         ;; retour à la suite du lien de branchement
  275 0000011E 4770            BX               LR
  276 00000120         
  277 00000120         WAIToff



ARM Macro Assembler    Page 8 


  278 00000120 4F0F            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6<<2)
  279 00000122 F8D7 A000       ldr              r10,[r7]
  280 00000126 F1BA 0F00       CMP              r10,#0x00
  281 0000012A D095            BEQ              loop
  282 0000012C         
  283 0000012C         ;; retour à la suite du lien de branchement
  284 0000012C 4770            BX               LR
  285 0000012E         
  286 0000012E BF00            NOP
  287 00000130                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              400250C0 
              00AAAAAA 
              00AFFFFF 
              40007200 
              40024004 
              40024008 
              40007100 
              00105FFF 
              0035FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s
