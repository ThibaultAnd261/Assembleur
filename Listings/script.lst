


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; configure the corresponding pin to be an output
   33 00000000         ; all GPIO pins are inputs by default
   34 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   35 00000000         
   36 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   37 00000000         ; By default, all GPIO pins have 2-mA drive.
   38 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   39 00000000         
   40 00000000         ; Digital enable register
   41 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   42 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   43 00000000         
   44 00000000         ; Pul_up
   45 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   46 00000000         
   47 00000000         ; Broches select
   48 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   49 00000000         
   50 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   51 00000000         
   52 00000000         ; blinking frequency
   53 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   54 00000000         
   55 00000000                 ENTRY
   56 00000000                 EXPORT           __main
   57 00000000         
   58 00000000         



ARM Macro Assembler    Page 3 


   59 00000000         
   60 00000000         
   61 00000000         __main
   62 00000000         
   63 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   64 00000000         ; ;;         
   65 00000000 4E18            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   66 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   67 00000006         ; ;;                              (GPIO::FEDCBA)
   68 00000006 6030            str              r0, [r6]
   69 00000008         
   70 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   71 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   72 0000000A BF00            nop
   73 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   74 0000000E         
   75 0000000E         
   76 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   77 0000000E         
   78 0000000E 4E16            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   79 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   80 00000014 6030            str              r0, [r6]
   81 00000016         
   82 00000016 4E15            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   83 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   84 0000001C 6030            str              r0, [r6]
   85 0000001E         
   86 0000001E 4E14            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   87 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   88 00000024 6030            str              r0, [r6]
   89 00000026         
   90 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   91 0000002A         
   92 0000002A         ;; BL Branchement vers un lien (sous programme)
   93 0000002A         
   94 0000002A         ; Configure les PWM + GPIO
   95 0000002A F7FF FFFE       BL               MOTEUR_INIT



ARM Macro Assembler    Page 4 


   96 0000002E         
   97 0000002E         ; Activer les deux moteurs droit et gauche
   98 0000002E F7FF FFFE       BL               MOTEUR_DROIT_ON
   99 00000032 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  100 00000036         
  101 00000036         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  102 00000036         loop
  103 00000036         ; Evalbot avance droit devant
  104 00000036 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  105 0000003A F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  106 0000003E         
  107 0000003E         ; Avancement pendant une période (deux WAIT)
  108 0000003E F000 F807       BL               WAITR       ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de reto
                                                            ur à la suite avec 
                                                            (BX LR)
  109 00000042 F000 F805       BL               WAITR
  110 00000046         
  111 00000046         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  112 00000046 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE ; MOTEUR_D
                                                            ROIT_INVERSE
  113 0000004A F000 F801       BL               WAITR
  114 0000004E         
  115 0000004E E7F2            b                loop
  116 00000050         
  117 00000050         ;; Boucle d'attente pour le recul
  118 00000050 4908    WAITR   ldr              r1, =0xAFFFFF
  119 00000052 3901    wait1   subs             r1, #1
  120 00000054 D1FD            bne              wait1
  121 00000056         
  122 00000056         ;; retour à la suite du lien de branchement
  123 00000056 4770            BX               LR
  124 00000058         
  125 00000058         ;; Boucle d'attente lors de la rotation
  126 00000058 4906    WAITT   ldr              r1, =0xAFFFFF
  127 0000005A 3901    wait2   subs             r1, #1
  128 0000005C D1FD            bne              wait2
  129 0000005E         
  130 0000005E         ;; retour à la suite du lien de branchement
  131 0000005E 4770            BX               LR
  132 00000060         
  133 00000060 BF00            NOP
  134 00000062                 END
              00 00 400FE108 
              40025400 
              4002551C 
              40025500 
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file script.s
   Uses
      None
Comment: .text unused
WAITR 00000050

Symbol: WAITR
   Definitions
      At line 118 in file script.s
   Uses
      At line 108 in file script.s
      At line 109 in file script.s
      At line 113 in file script.s

WAITT 00000058

Symbol: WAITT
   Definitions
      At line 126 in file script.s
   Uses
      None
Comment: WAITT unused
__main 00000000

Symbol: __main
   Definitions
      At line 61 in file script.s
   Uses
      At line 56 in file script.s
Comment: __main used once
loop 00000036

Symbol: loop
   Definitions
      At line 102 in file script.s
   Uses
      At line 115 in file script.s
Comment: loop used once
wait1 00000052

Symbol: wait1
   Definitions
      At line 119 in file script.s
   Uses
      At line 120 in file script.s
Comment: wait1 used once
wait2 0000005A

Symbol: wait2
   Definitions
      At line 127 in file script.s
   Uses
      At line 128 in file script.s
Comment: wait2 used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 48 in file script.s
   Uses
      At line 79 in file script.s
      At line 83 in file script.s
      At line 87 in file script.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 50 in file script.s
   Uses
      None
Comment: BROCHE6 unused
DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 53 in file script.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 45 in file script.s
   Uses
      None
Comment: GPIO_I_PUR unused
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 42 in file script.s
   Uses
      At line 82 in file script.s
Comment: GPIO_O_DEN used once
GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 34 in file script.s
   Uses
      At line 78 in file script.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 38 in file script.s
   Uses
      At line 86 in file script.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTD_BASE
   Definitions
      At line 30 in file script.s
   Uses
      None
Comment: GPIO_PORTD_BASE unused
GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 27 in file script.s
   Uses
      At line 78 in file script.s
      At line 82 in file script.s
      At line 86 in file script.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 24 in file script.s
   Uses
      At line 65 in file script.s
Comment: SYSCTL_PERIPH_GPIO used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 14 in file script.s
   Uses
      At line 112 in file script.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 13 in file script.s
   Uses
      At line 104 in file script.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 15 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 12 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 11 in file script.s
   Uses
      At line 98 in file script.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 20 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 19 in file script.s
   Uses
      At line 105 in file script.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 21 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 18 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 17 in file script.s
   Uses
      At line 99 in file script.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 9 in file script.s
   Uses
      At line 95 in file script.s
Comment: MOTEUR_INIT used once
11 symbols
365 symbols in table
