


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; The GPIODATA register is the data register
   33 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   34 00000000         
   35 00000000         ; configure the corresponding pin to be an output
   36 00000000         ; all GPIO pins are inputs by default
   37 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   38 00000000         
   39 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   40 00000000         ; By default, all GPIO pins have 2-mA drive.
   41 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   42 00000000         
   43 00000000         ; Digital enable register
   44 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   45 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   46 00000000         
   47 00000000         ; Pul_up
   48 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   49 00000000         
   50 00000000         ; Broches select
   51 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   52 00000000         
   53 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   54 00000000         



ARM Macro Assembler    Page 3 


   55 00000000 00000001 
                       BROCHE0 EQU              0x01        ;bumper droit
   56 00000000         
   57 00000000 00000002 
                       BROCHE1 EQU              0x02        ;bumper gauche
   58 00000000         
   59 00000000 00000003 
                       BROCHE1_2
                               EQU              0x03        ;bumper droit et ga
                                                            uche
   60 00000000         
   61 00000000         ; blinking frequency
   62 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   63 00000000         
   64 00000000                 ENTRY
   65 00000000                 EXPORT           __main
   66 00000000         
   67 00000000         
   68 00000000         
   69 00000000         
   70 00000000         __main
   71 00000000         
   72 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   73 00000000         ; ;;         
   74 00000000 4E32            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   75 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   76 00000006         ; ;;                              (GPIO::FEDCBA)
   77 00000006 6030            str              r0, [r6]
   78 00000008         
   79 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   80 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   81 0000000A BF00            nop
   82 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   83 0000000E         
   84 0000000E         
   85 0000000E         ; Configure les PWM + GPIO
   86 0000000E F7FF FFFE       BL               MOTEUR_INIT
   87 00000012         
   88 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   89 00000012         
   90 00000012 4E2F            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   91 00000014 F04F 0030       ldr              r0, = BROCHE4_5
   92 00000018 6030            str              r0, [r6]
   93 0000001A         



ARM Macro Assembler    Page 4 


   94 0000001A 4E2E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   95 0000001C F04F 0030       ldr              r0, = BROCHE4_5
   96 00000020 6030            str              r0, [r6]
   97 00000022         
   98 00000022 4E2D            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   99 00000024 F04F 0030       ldr              r0, = BROCHE4_5
  100 00000028 6030            str              r0, [r6]
  101 0000002A         
  102 0000002A F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  103 0000002E         
  104 0000002E         
  105 0000002E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper gauc
                       he
  106 0000002E         
  107 0000002E 4F2B            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  108 00000030 F04F 0003       ldr              r0, = BROCHE1_2
  109 00000034 6038            str              r0, [r7]
  110 00000036         
  111 00000036 4F2A            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  112 00000038 F04F 0003       ldr              r0, = BROCHE1_2
  113 0000003C 6038            str              r0, [r7]
  114 0000003E         
  115 0000003E         
  116 0000003E         
  117 0000003E         loop
  118 0000003E F04F 0300       mov              r3, #0      ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000  
  119 00000042 4E28            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  120 00000044 6033            str              r3, [r6]    ;mov r3, #0x000
  121 00000046         ; Activer les deux moteurs droit et gauche
  122 00000046 F7FF FFFE       BL               MOTEUR_DROIT_ON
  123 0000004A F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  124 0000004E         ; Evalbot avance droit devant
  125 0000004E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  126 00000052 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  127 00000056         
  128 00000056 F000 F81B       BL               WAIT
  129 0000005A         
  130 0000005A E7F0            b                loop
  131 0000005C         
  132 0000005C         BD_actif



ARM Macro Assembler    Page 5 


  133 0000005C         
  134 0000005C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  135 00000060 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  136 00000064 F000 F824       BL               WAITar
  137 00000068 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  138 0000006C F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  139 00000070 F000 F826       BL               WAITtourne
  140 00000074 E7E3            b                loop
  141 00000076         
  142 00000076         BG_actif
  143 00000076         
  144 00000076 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  145 0000007A F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  146 0000007E F000 F817       BL               WAITar
  147 00000082 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  148 00000086 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  149 0000008A F000 F819       BL               WAITtourne
  150 0000008E E7D6            b                loop
  151 00000090         
  152 00000090         
  153 00000090         
  154 00000090         
  155 00000090         
  156 00000090         
  157 00000090         
  158 00000090         ;; Boucle d'attente pour la marche avant
  159 00000090 4915    WAIT    ldr              r1, =0xAFFFFF
  160 00000092         wait1
  161 00000092 4F16            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  162 00000094 F8D7 A000       ldr              r10,[r7]
  163 00000098 F1BA 0F00       CMP              r10,#0x00
  164 0000009C D0DE            BEQ              BD_actif
  165 0000009E         
  166 0000009E 4F14            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  167 000000A0 F8D7 A000       ldr              r10,[r7]
  168 000000A4 F1BA 0F00       CMP              r10,#0x00
  169 000000A8 D0E5            BEQ              BG_actif
  170 000000AA         
  171 000000AA         
  172 000000AA         
  173 000000AA 3901            subs             r1, #1
  174 000000AC D1F1            bne              wait1
  175 000000AE         
  176 000000AE         ;; retour à la suite du lien de branchement
  177 000000AE 4770            BX               LR
  178 000000B0         
  179 000000B0         ;; Boucle d'attente lors la marche arrière
  180 000000B0 4910    WAITar  ldr              r1, =0x105FFF
  181 000000B2         wait2
  182 000000B2         ; allumer la led broche 4 et 5 (BROCHE4_5)
  183 000000B2 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000  
  184 000000B6 4E0B            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 



ARM Macro Assembler    Page 6 


                                                            ==> LED1
  185 000000B8 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  186 000000BA         
  187 000000BA 3901            subs             r1, #1
  188 000000BC D1F9            bne              wait2
  189 000000BE         
  190 000000BE         ;; retour à la suite du lien de branchement
  191 000000BE 4770            BX               LR
  192 000000C0         
  193 000000C0         
  194 000000C0         ;; Boucle d'attente lors la marche arrière
  195 000000C0         WAITtourne
  196 000000C0 490D            ldr              r1, =0x35FFFF
  197 000000C2         wait3
  198 000000C2 3901            subs             r1, #1
  199 000000C4 D1FD            bne              wait3
  200 000000C6         
  201 000000C6         ;; retour à la suite du lien de branchement
  202 000000C6 4770            BX               LR
  203 000000C8         
  204 000000C8 BF00            NOP
  205 000000CA                 END
              00 00 400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              400250C0 
              00AFFFFF 
              40024004 
              40024008 
              00105FFF 
              0035FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file script.s
   Uses
      None
Comment: .text unused
BD_actif 0000005C

Symbol: BD_actif
   Definitions
      At line 132 in file script.s
   Uses
      At line 164 in file script.s
Comment: BD_actif used once
BG_actif 00000076

Symbol: BG_actif
   Definitions
      At line 142 in file script.s
   Uses
      At line 169 in file script.s
Comment: BG_actif used once
WAIT 00000090

Symbol: WAIT
   Definitions
      At line 159 in file script.s
   Uses
      At line 128 in file script.s
Comment: WAIT used once
WAITar 000000B0

Symbol: WAITar
   Definitions
      At line 180 in file script.s
   Uses
      At line 136 in file script.s
      At line 146 in file script.s

WAITtourne 000000C0

Symbol: WAITtourne
   Definitions
      At line 195 in file script.s
   Uses
      At line 139 in file script.s
      At line 149 in file script.s

__main 00000000

Symbol: __main
   Definitions
      At line 70 in file script.s
   Uses
      At line 65 in file script.s
Comment: __main used once
loop 0000003E



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop
   Definitions
      At line 117 in file script.s
   Uses
      At line 130 in file script.s
      At line 140 in file script.s
      At line 150 in file script.s

wait1 00000092

Symbol: wait1
   Definitions
      At line 160 in file script.s
   Uses
      At line 174 in file script.s
Comment: wait1 used once
wait2 000000B2

Symbol: wait2
   Definitions
      At line 181 in file script.s
   Uses
      At line 188 in file script.s
Comment: wait2 used once
wait3 000000C2

Symbol: wait3
   Definitions
      At line 197 in file script.s
   Uses
      At line 199 in file script.s
Comment: wait3 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 55 in file script.s
   Uses
      At line 161 in file script.s
Comment: BROCHE0 used once
BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 57 in file script.s
   Uses
      At line 166 in file script.s
Comment: BROCHE1 used once
BROCHE1_2 00000003

Symbol: BROCHE1_2
   Definitions
      At line 59 in file script.s
   Uses
      At line 108 in file script.s
      At line 112 in file script.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 51 in file script.s
   Uses
      At line 91 in file script.s
      At line 95 in file script.s
      At line 99 in file script.s
      At line 119 in file script.s
      At line 183 in file script.s
      At line 184 in file script.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 53 in file script.s
   Uses
      None
Comment: BROCHE6 unused
DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 62 in file script.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 48 in file script.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 107 in file script.s
Comment: GPIO_I_PUR used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 45 in file script.s
   Uses
      At line 94 in file script.s
      At line 111 in file script.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 37 in file script.s
   Uses
      At line 90 in file script.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 41 in file script.s
   Uses
      At line 98 in file script.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 30 in file script.s
   Uses
      None
Comment: GPIO_PORTD_BASE unused
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 33 in file script.s
   Uses
      At line 107 in file script.s
      At line 111 in file script.s
      At line 161 in file script.s
      At line 166 in file script.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 27 in file script.s
   Uses
      At line 90 in file script.s
      At line 94 in file script.s
      At line 98 in file script.s
      At line 119 in file script.s
      At line 184 in file script.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 24 in file script.s
   Uses
      At line 74 in file script.s
Comment: SYSCTL_PERIPH_GPIO used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 14 in file script.s
   Uses
      At line 134 in file script.s
      At line 144 in file script.s
      At line 148 in file script.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 13 in file script.s
   Uses
      At line 125 in file script.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 15 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 12 in file script.s
   Uses
      At line 137 in file script.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 11 in file script.s
   Uses
      At line 122 in file script.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 20 in file script.s
   Uses
      At line 135 in file script.s
      At line 138 in file script.s
      At line 145 in file script.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 19 in file script.s
   Uses
      At line 126 in file script.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 21 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 18 in file script.s
   Uses
      At line 147 in file script.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 17 in file script.s
   Uses
      At line 123 in file script.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 9 in file script.s
   Uses
      At line 86 in file script.s
Comment: MOTEUR_INIT used once
11 symbols
373 symbols in table
