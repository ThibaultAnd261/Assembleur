


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
    9 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   10 00000000         
   11 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   12 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   13 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   14 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   15 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   16 00000000         
   17 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   18 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   19 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   21 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   22 00000000         
   23 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   24 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register



ARM Macro Assembler    Page 2 


   30 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   31 00000000         
   32 00000000         ; The GPIODATA register is the data register
   33 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   34 00000000         
   35 00000000         ; configure the corresponding pin to be an output
   36 00000000         ; all GPIO pins are inputs by default
   37 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   38 00000000         
   39 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   40 00000000         ; By default, all GPIO pins have 2-mA drive.
   41 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   42 00000000         
   43 00000000         ; Digital enable register
   44 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   45 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   46 00000000         
   47 00000000         ; Pul_up
   48 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   49 00000000         
   50 00000000         ; Broches select
   51 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   52 00000000         
   53 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   54 00000000         



ARM Macro Assembler    Page 3 


   55 00000000 00000001 
                       BROCHE0 EQU              0x01        ;bumper droit
   56 00000000         
   57 00000000 00000002 
                       BROCHE1 EQU              0x02        ;bumper gauche
   58 00000000         
   59 00000000         ; blinking frequency
   60 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   61 00000000         
   62 00000000                 ENTRY
   63 00000000                 EXPORT           __main
   64 00000000         
   65 00000000         
   66 00000000         
   67 00000000         
   68 00000000         __main
   69 00000000         
   70 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   71 00000000         ; ;;         
   72 00000000 4E24            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   73 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b101
                                                            000)
   74 00000006         ; ;;                              (GPIO::FEDCBA)
   75 00000006 6030            str              r0, [r6]
   76 00000008         
   77 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   78 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   79 0000000A BF00            nop
   80 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   81 0000000E         
   82 0000000E         
   83 0000000E         ; Configure les PWM + GPIO
   84 0000000E F7FF FFFE       BL               MOTEUR_INIT
   85 00000012         
   86 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   87 00000012         
   88 00000012 4E21            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   89 00000014 F04F 0030       ldr              r0, = BROCHE4_5
   90 00000018 6030            str              r0, [r6]
   91 0000001A         
   92 0000001A 4E20            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   93 0000001C F04F 0030       ldr              r0, = BROCHE4_5



ARM Macro Assembler    Page 4 


   94 00000020 6030            str              r0, [r6]
   95 00000022         
   96 00000022 4E1F            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   97 00000024 F04F 0030       ldr              r0, = BROCHE4_5
   98 00000028 6030            str              r0, [r6]
   99 0000002A         
  100 0000002A F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  101 0000002E         
  102 0000002E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION bumper droi
                       t
  103 0000002E         
  104 0000002E 4F1D            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  105 00000030 F04F 0001       ldr              r0, = BROCHE0
  106 00000034 6038            str              r0, [r7]
  107 00000036         
  108 00000036 4F1C            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  109 00000038 F04F 0001       ldr              r0, = BROCHE0
  110 0000003C 6038            str              r0, [r7]
  111 0000003E         
  112 0000003E 4F1B            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> bumper
  113 00000040         
  114 00000040         
  115 00000040         
  116 00000040         ; allumer la led broche 4 (BROCHE4_5)
  117 00000040 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  118 00000044         
  119 00000044 4E1A            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  120 00000046         
  121 00000046         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED ;^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^CLIGNOTTEMENT
  122 00000046         
  123 00000046 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  124 00000048         
  125 00000048         ; Activer les deux moteurs droit et gauche
  126 00000048 F7FF FFFE       BL               MOTEUR_DROIT_ON
  127 0000004C F7FF FFFE       BL               MOTEUR_GAUCHE_ON



ARM Macro Assembler    Page 5 


  128 00000050         
  129 00000050         loop
  130 00000050         ; Evalbot avance droit devant
  131 00000050 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  132 00000054 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  133 00000058         
  134 00000058 F000 F80D       BL               WAIT
  135 0000005C         
  136 0000005C E7F8            b                loop
  137 0000005E         
  138 0000005E         BD_active
  139 0000005E         
  140 0000005E F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  141 00000062         ;BL MOTEUR_GAUCHE_ARRIERE
  142 00000062 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ;
  143 00000066 F000 F810       BL               WAITar
  144 0000006A         ;BL MOTEUR_GAUCHE_ARRIERE
  145 0000006A         ;BL WAITtourne
  146 0000006A         
  147 0000006A         BG_active
  148 0000006A         
  149 0000006A F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  150 0000006E F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  151 00000072 F000 F80A       BL               WAITar
  152 00000076         ;BL MOTEUR_DROIT_ARRIERE
  153 00000076         ;BL WAITtourne
  154 00000076         
  155 00000076         
  156 00000076         
  157 00000076         
  158 00000076         
  159 00000076         
  160 00000076         
  161 00000076         ;; Boucle d'attente pour la marche avant
  162 00000076 490F    WAIT    ldr              r1, =0xAFFFFF
  163 00000078         wait1
  164 00000078 4F0C            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  165 0000007A F8D7 A000       ldr              r10,[r7]
  166 0000007E F1BA 0F00       CMP              r10,#0x00
  167 00000082 D0EC            BEQ              BD_active
  168 00000084         
  169 00000084 3901            subs             r1, #1
  170 00000086 D1F7            bne              wait1
  171 00000088         
  172 00000088         ;; retour à la suite du lien de branchement
  173 00000088 4770            BX               LR
  174 0000008A         
  175 0000008A         ;; Boucle d'attente lors la marche arrière
  176 0000008A 490A    WAITar  ldr              r1, =0xAFFFFF
  177 0000008C         wait2
  178 0000008C 3901            subs             r1, #1
  179 0000008E D1FD            bne              wait2
  180 00000090         
  181 00000090         ;; retour à la suite du lien de branchement
  182 00000090 4770            BX               LR
  183 00000092         
  184 00000092 BF00            NOP
  185 00000094                 END



ARM Macro Assembler    Page 6 


              400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              40024004 
              400250C0 
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\script.d -o.\objects\script.o -I.\RTE\_Target_1 -IC:\Use
rs\antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\
antoi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\
listings\script.lst script.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file script.s
   Uses
      None
Comment: .text unused
BD_active 0000005E

Symbol: BD_active
   Definitions
      At line 138 in file script.s
   Uses
      At line 167 in file script.s
Comment: BD_active used once
BG_active 0000006A

Symbol: BG_active
   Definitions
      At line 147 in file script.s
   Uses
      None
Comment: BG_active unused
WAIT 00000076

Symbol: WAIT
   Definitions
      At line 162 in file script.s
   Uses
      At line 134 in file script.s
Comment: WAIT used once
WAITar 0000008A

Symbol: WAITar
   Definitions
      At line 176 in file script.s
   Uses
      At line 143 in file script.s
      At line 151 in file script.s

__main 00000000

Symbol: __main
   Definitions
      At line 68 in file script.s
   Uses
      At line 63 in file script.s
Comment: __main used once
loop 00000050

Symbol: loop
   Definitions
      At line 129 in file script.s
   Uses
      At line 136 in file script.s
Comment: loop used once
wait1 00000078




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: wait1
   Definitions
      At line 163 in file script.s
   Uses
      At line 170 in file script.s
Comment: wait1 used once
wait2 0000008C

Symbol: wait2
   Definitions
      At line 177 in file script.s
   Uses
      At line 179 in file script.s
Comment: wait2 used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 55 in file script.s
   Uses
      At line 105 in file script.s
      At line 109 in file script.s
      At line 112 in file script.s
      At line 164 in file script.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 57 in file script.s
   Uses
      None
Comment: BROCHE1 unused
BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 51 in file script.s
   Uses
      At line 89 in file script.s
      At line 93 in file script.s
      At line 97 in file script.s
      At line 117 in file script.s
      At line 119 in file script.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 53 in file script.s
   Uses
      None
Comment: BROCHE6 unused
DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 60 in file script.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 48 in file script.s
   Uses
      At line 104 in file script.s
Comment: GPIO_I_PUR used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 45 in file script.s
   Uses
      At line 92 in file script.s
      At line 108 in file script.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 37 in file script.s
   Uses
      At line 88 in file script.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 41 in file script.s
   Uses
      At line 96 in file script.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 30 in file script.s
   Uses
      None
Comment: GPIO_PORTD_BASE unused
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 33 in file script.s
   Uses
      At line 104 in file script.s
      At line 108 in file script.s
      At line 112 in file script.s
      At line 164 in file script.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 27 in file script.s
   Uses
      At line 88 in file script.s
      At line 92 in file script.s
      At line 96 in file script.s
      At line 119 in file script.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 24 in file script.s
   Uses
      At line 72 in file script.s
Comment: SYSCTL_PERIPH_GPIO used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 14 in file script.s
   Uses
      At line 140 in file script.s
      At line 149 in file script.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 13 in file script.s
   Uses
      At line 131 in file script.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 15 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 12 in file script.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 11 in file script.s
   Uses
      At line 126 in file script.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 20 in file script.s
   Uses
      At line 150 in file script.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 19 in file script.s
   Uses
      At line 132 in file script.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 21 in file script.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 18 in file script.s
   Uses
      At line 142 in file script.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 17 in file script.s
   Uses
      At line 127 in file script.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 9 in file script.s
   Uses
      At line 84 in file script.s
Comment: MOTEUR_INIT used once
11 symbols
370 symbols in table
